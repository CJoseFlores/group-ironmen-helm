apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "group-ironmen.fullname" . }}-backend
  labels:
    {{- include "group-ironmen.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "group-ironmen.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.backend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "group-ironmen.labels" . | nindent 8 }}
        {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "group-ironmen.serviceAccountName" . }}
      {{- with .Values.backend.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-backend
          {{- with .Values.backend.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          {{- if .Values.backend.livenessProbe.enabled }}
          {{- with .Values.backend.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .Values.backend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.backend.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: PG_HOST
              value: "{{ .Values.backend.database.host | default (printf "%s-postgresql" (include "group-ironmen.fullname" .)) }}"
            - name: PG_PORT
              value: {{ .Values.backend.database.port | quote }}
            - name: PG_DB
              value: {{ .Values.backend.database.db | quote }}
            - name: PG_USER
              value: {{ .Values.backend.database.user | quote }}
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.database.password.secretName | quote }}
                  key: {{ .Values.backend.database.password.secretKey | quote }}
            - name: BACKEND_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backend.hashSecret.name | quote }}
                  key: {{ .Values.backend.hashSecret.key | quote }}
            - name: RUST_BACKTRACE
              value: {{ .Values.backend.rustBackTrace | quote }}
      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
